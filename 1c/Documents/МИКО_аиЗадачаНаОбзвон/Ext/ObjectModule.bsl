

Процедура ПриЗаписи(Отказ)
	Если ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;

	Для каждого СтрокаДанных Из НомераТелефонов Цикл
		СтрокаДанных.Номер   = МИКО_аиAPI.УбратьИзСтрокиТелефонаВсеБуквы(СтрокаДанных.Номер);
		СтрокаДанных.phoneId = МИКО_аиAPI.ПреобразоватьНомерДляСохранения(СтрокаДанных.Номер);			
	КонецЦикла;
	врНомера 	= НомераТелефонов.Выгрузить().Скопировать();	
	numbers = Новый Массив; 
	Для каждого данныеНомера Из врНомера Цикл
		timeCallAllow = Строка(данныеНомера.timeCallAllow);   
		Если ЗначениеЗаполнено(данныеНомера.ПараметSpeach) Тогда
			params = Новый Структура();
			params.Вставить("speach", данныеНомера.ПараметSpeach);
			params.Вставить("speach1", данныеНомера.ПараметSpeach1);
			params.Вставить("speach2", данныеНомера.ПараметSpeach2);
			numbers.Добавить(Новый Структура("number,params,timeCallAllow", данныеНомера.Номер, params, timeCallAllow));
		Иначе	                                                                 
			numbers.Добавить(Новый Структура("number,timeCallAllow", данныеНомера.Номер, timeCallAllow));
		КонецЕсли;
	КонецЦикла;
	
	врНомера 	= Неопределено;
	
	Если ТипЗнч(ВнутреннийНомер) = Тип("Строка") Тогда
		innerNum = ВнутреннийНомер;
		innerNumType = "exten";
	Иначе	
		innerNum = ВнутреннийНомер.ИдентификаторОпроса; 
		innerNumType = "polling";
	КонецЕсли;
	
	ДанныеЗадачи = Новый Структура; 	      
	ДанныеЗадачи.Вставить("crmId", Номер);
	ДанныеЗадачи.Вставить("name", 	НаименованиеЗадачи);
	ДанныеЗадачи.Вставить("state", Состояние);
	ДанныеЗадачи.Вставить("innerNum", innerNum);
	ДанныеЗадачи.Вставить("innerNumType", innerNumType);
	ДанныеЗадачи.Вставить("maxCountChannels", МаксимальноеЧислоКаналов);
	ДанныеЗадачи.Вставить("numbers", numbers);

	Результат 	= МИКО_аиAPI.СоздатьЗадачу(ДанныеЗадачи);
	Отказ 		= (Результат.result = Ложь); 
	Если Отказ Тогда
		Сообщить("Не вышло отправить задачу на сверер MikoPBX. Проверьте параметры подключения.");
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(ИдентификаторЗадачи) Тогда
		ИдентификаторЗадачи = Результат.data.id;
	КонецЕсли;
	
	Если ИдентификаторЗадачи <> Число(Результат.data.id)  Тогда
		Сообщить("Был изменен идентификатор задачи на АТС с "+ИдентификаторЗадачи+" на "+Результат.data.id+".");
		ИдентификаторЗадачи = Результат.data.id;
	КонецЕсли;
	
	Если Состояние <> 1 Тогда
		РезультатыЗадачи = МИКО_аиAPI.ПолучитьДанныеЗадачи(ИдентификаторЗадачи);
		Если РезультатыЗадачи.result = Истина Тогда 
			ЗадачаЗавершена = Истина;
			Для каждого result Из РезультатыЗадачи.data.results Цикл
				Если Число(result.closeTime) = 0  Тогда
					ЗадачаЗавершена = Ложь;
				КонецЕсли;
			КонецЦикла;
			
			Если ЗадачаЗавершена Тогда
				Состояние = 1; 
				Сообщить("По данным АТС все номера по текущей задаче были обработаны. Задача закрыта.");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ИдентификаторЗадачи = "";
	Состояние = 2;
	Для каждого Данные Из НомераТелефонов Цикл
		Данные.Статус = "";
	КонецЦикла;
КонецПроцедуры

