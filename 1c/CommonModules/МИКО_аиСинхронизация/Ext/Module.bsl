///
// Регламентные задачи.
///

// Синхронизация выполнения задач.
// 
Процедура СонхронизацияЗадач() Экспорт
	changeTime = Формат(НачалоДня(ТекущаяДата()) - дата(1970,1,1,1,0,0), "ЧГ=0");    		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	МИКО_аиРезультатыЗадачОбзвона.changeTime КАК changeTime
		|ИЗ
		|	РегистрСведений.МИКО_аиРезультатыЗадачОбзвона КАК МИКО_аиРезультатыЗадачОбзвона
		|
		|УПОРЯДОЧИТЬ ПО
		|	changeTime УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
    	changeTime = ВыборкаДетальныеЗаписи.changeTime;
		Прервать;
	КонецЦикла;
	
	ОтветСервера  = МИКО_аиAPI.ПолучитьРезультатыЗадач(changeTime);     
	КэшДокументов = Новый Соответствие;
	
	НачатьТранзакцию();                    
	Данные  =  Новый Структура("result");
	ЗаполнитьЗначенияСвойств(Данные, ОтветСервера);  
	Если Данные.result = Истина Тогда
		Для каждого result Из ОтветСервера.data.results Цикл 
			changeTime = Макс(Число(result.changeTime), changeTime); 	
			Ссылка = КэшДокументов.Получить(result.taskId);
			Если Ссылка = Неопределено Тогда
				Ссылка = Документы.МИКО_аиЗадачаНаОбзвон.НайтиПоРеквизиту("ИдентификаторЗадачи", Число(result.taskId)); 
			    КэшДокументов.Вставить(result.taskId, Ссылка); 
			КонецЕсли;
			Если Ссылка = Документы.МИКО_аиЗадачаНаОбзвон.ПустаяСсылка() Тогда
				Продолжить;
			КонецЕсли;
			
			МЗ = РегистрыСведений.МИКО_аиРезультатыЗадачОбзвона.СоздатьМенеджерЗаписи();
			МЗ.Задача = Ссылка;
			ЗаполнитьЗначенияСвойств(МЗ, result); 
			МЗ.Успешный = Найти(МЗ.result, "SUCCESS") = 1;
			МЗ.Записать();
		КонецЦикла;
	КонецЕсли;

	МЗ = РегистрыСведений.МИКО_аиРезультатыЗадачОбзвона.СоздатьМенеджерЗаписи();
	МЗ.changeTime = changeTime;
	МЗ.Записать();
	
	ИзмененныеДокументы = Новый Массив;
	Для каждого данныеДокумента Из КэшДокументов Цикл
	 	ИзмененныеДокументы.Добавить(данныеДокумента.Значение);	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗадачаНаОбзвонНомераТелефонов.Ссылка КАК Ссылка,
		|	МИНИМУМ(МИКО_аиРезультатыЗадачОбзвона.closeTime) КАК closeTime
		|ИЗ
		|	Документ.МИКО_аиЗадачаНаОбзвон.НомераТелефонов КАК ЗадачаНаОбзвонНомераТелефонов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МИКО_аиРезультатыЗадачОбзвона КАК МИКО_аиРезультатыЗадачОбзвона
		|		ПО ЗадачаНаОбзвонНомераТелефонов.Ссылка = МИКО_аиРезультатыЗадачОбзвона.Задача
		|			И ЗадачаНаОбзвонНомераТелефонов.phoneId = МИКО_аиРезультатыЗадачОбзвона.phoneId
		|ГДЕ
		|	ЗадачаНаОбзвонНомераТелефонов.Ссылка В(&Ссылки)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗадачаНаОбзвонНомераТелефонов.Ссылка";
	
	Запрос.УстановитьПараметр("Ссылки", ИзмененныеДокументы);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.closeTime = 0 Тогда
		 	Продолжить;
		КонецЕсли; 
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокОбъект.Состояние = 1;
		ДокОбъект.Записать();
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

// Загрузка новых результатов опроса.
// 
Процедура СинхронизацияОпросов() Экспорт
  	changeTime = Формат(НачалоДня(ТекущаяДата()) - дата(1970,1,1,1,0,0), "ЧГ=0");    		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	МИКО_аиРезультатыЗадачОпроса.changeTime КАК changeTime
		|ИЗ
		|	РегистрСведений.МИКО_аиРезультатыЗадачОпроса КАК МИКО_аиРезультатыЗадачОпроса
		|
		|УПОРЯДОЧИТЬ ПО
		|	changeTime УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
    	changeTime = ВыборкаДетальныеЗаписи.changeTime;
		Прервать;
	КонецЦикла;
	ОтветСервера = МИКО_аиAPI.ПолучитьРезультатыОпроса(changeTime);
	КэшДокументов = Новый Соответствие;
	
	НачатьТранзакцию();   
	Данные  =  Новый Структура("result");
	ЗаполнитьЗначенияСвойств(Данные, ОтветСервера);    
	Если Данные.result = Истина Тогда
		Для каждого result Из ОтветСервера.data.results Цикл 
			Ссылка = КэшДокументов.Получить(result.taskId);
			Если Ссылка = Неопределено Тогда
				Ссылка = Документы.МИКО_аиЗадачаНаОбзвон.НайтиПоРеквизиту("ИдентификаторЗадачи", Число(result.taskId)); 
			    КэшДокументов.Вставить(result.taskId, Ссылка); 
			КонецЕсли;
			Если Ссылка = Документы.МИКО_аиЗадачаНаОбзвон.ПустаяСсылка() Тогда
				Продолжить;
			КонецЕсли;
			
			МЗ = РегистрыСведений.МИКО_аиРезультатыЗадачОпроса.СоздатьМенеджерЗаписи();
			МЗ.Задача = Ссылка;
			ЗаполнитьЗначенияСвойств(МЗ, result); 
			МЗ.Записать();
		КонецЦикла;
	КонецЕсли;
 	ЗафиксироватьТранзакцию();

КонецПроцедуры

